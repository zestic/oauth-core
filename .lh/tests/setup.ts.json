{
    "sourceFile": "tests/setup.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752834579873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752834759156,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n const originalConsoleWarn = console.warn;\n const originalConsoleError = console.error;\n \n // Store original methods for restoration\n-(global as Record<string, unknown>).originalConsole = {\n+(globalThis as any).originalConsole = {\n   log: originalConsoleLog,\n   warn: originalConsoleWarn,\n   error: originalConsoleError,\n };\n@@ -19,15 +19,15 @@\n console.warn = jest.fn();\n console.error = jest.fn();\n \n // Global test utilities\n-(global as Record<string, unknown>).testUtils = {\n+(globalThis as any).testUtils = {\n   restoreConsole: () => {\n     console.log = originalConsoleLog;\n     console.warn = originalConsoleWarn;\n     console.error = originalConsoleError;\n   },\n-  \n+\n   mockConsole: () => {\n     console.log = jest.fn();\n     console.warn = jest.fn();\n     console.error = jest.fn();\n"
                }
            ],
            "date": 1752834579873,
            "name": "Commit-0",
            "content": "/**\n * Test setup and global configuration\n */\n\n// Mock console methods to reduce noise in tests\nconst originalConsoleLog = console.log;\nconst originalConsoleWarn = console.warn;\nconst originalConsoleError = console.error;\n\n// Store original methods for restoration\n(global as Record<string, unknown>).originalConsole = {\n  log: originalConsoleLog,\n  warn: originalConsoleWarn,\n  error: originalConsoleError,\n};\n\n// Mock console methods during tests\nconsole.log = jest.fn();\nconsole.warn = jest.fn();\nconsole.error = jest.fn();\n\n// Global test utilities\n(global as Record<string, unknown>).testUtils = {\n  restoreConsole: () => {\n    console.log = originalConsoleLog;\n    console.warn = originalConsoleWarn;\n    console.error = originalConsoleError;\n  },\n  \n  mockConsole: () => {\n    console.log = jest.fn();\n    console.warn = jest.fn();\n    console.error = jest.fn();\n  },\n};\n\n// Global test timeout\njest.setTimeout(10000);\n\n// Clean up after each test\nafterEach(() => {\n  jest.clearAllMocks();\n});\n"
        }
    ]
}