{
    "sourceFile": "src/index.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1752830934296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752830954408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,10 +46,10 @@\n export { UrlParser } from './utils/UrlParser';\n \n // Convenience factory function\n export function createOAuthCore(\n-  config: import('./types/OAuthTypes').OAuthConfig,\n-  adapters: import('./types/OAuthTypes').OAuthAdapters,\n-  flowConfig?: import('./types/OAuthTypes').FlowConfiguration\n+  config: OAuthConfig,\n+  adapters: OAuthAdapters,\n+  flowConfig?: FlowConfiguration\n ) {\n   return new OAuthCore(config, adapters, flowConfig);\n }\n"
                },
                {
                    "date": 1752830974283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,11 +25,13 @@\n   TokenExchangeRequest,\n   TokenResponse,\n   OAuthError,\n   OAuthErrorCode,\n-  OAUTH_ERROR_CODES\n+  FlowConfiguration\n } from './types/OAuthTypes';\n \n+export { OAUTH_ERROR_CODES } from './types/OAuthTypes';\n+\n export type {\n   OAuthEndpoints,\n   DetectionStrategy,\n   OAuthConfigOptions,\n"
                },
                {
                    "date": 1752831485076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+/**\n+ * @zestic/oauth-core - Framework-agnostic OAuth authentication library\n+ */\n+\n+// Core classes\n+export { OAuthCore } from './core/OAuthCore';\n+export { FlowRegistry } from './core/FlowRegistry';\n+export { PKCEManager } from './core/PKCEManager';\n+export { TokenManager } from './core/TokenManager';\n+export { StateValidator } from './core/StateValidator';\n+\n+// Flow handlers\n+export * from './flows';\n+\n+// Types (avoiding duplicate exports)\n+export type {\n+  OAuthConfig,\n+  OAuthAdapters,\n+  OAuthResult,\n+  StorageAdapter,\n+  HttpAdapter,\n+  PKCEAdapter,\n+  HttpResponse,\n+  PKCEChallenge,\n+  TokenExchangeRequest,\n+  TokenResponse,\n+  OAuthError,\n+  OAuthErrorCode,\n+  FlowConfiguration\n+} from './types/OAuthTypes';\n+\n+export { OAUTH_ERROR_CODES } from './types/OAuthTypes';\n+\n+export type {\n+  OAuthEndpoints,\n+  DetectionStrategy,\n+  OAuthConfigOptions,\n+  StorageConfig,\n+  HttpConfig,\n+  PKCEConfig,\n+  AdapterConfig,\n+  OAuthCoreConfig,\n+  DEFAULT_CONFIG\n+} from './types/ConfigTypes';\n+\n+// Utilities\n+export { ErrorHandler } from './utils/ErrorHandler';\n+export { UrlParser } from './utils/UrlParser';\n+\n+// Convenience factory function\n+export function createOAuthCore(\n+  config: import('./types/OAuthTypes').OAuthConfig,\n+  adapters: import('./types/OAuthTypes').OAuthAdapters,\n+  flowConfig?: import('./types/OAuthTypes').FlowConfiguration\n+) {\n+  return new OAuthCore(config, adapters, flowConfig);\n+}\n"
                },
                {
                    "date": 1752831685702,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,64 +51,7 @@\n export function createOAuthCore(\n   config: import('./types/OAuthTypes').OAuthConfig,\n   adapters: import('./types/OAuthTypes').OAuthAdapters,\n   flowConfig?: import('./types/OAuthTypes').FlowConfiguration\n-) {\n+): OAuthCore {\n   return new OAuthCore(config, adapters, flowConfig);\n }\n-/**\n- * @zestic/oauth-core - Framework-agnostic OAuth authentication library\n- */\n-\n-// Core classes\n-export { OAuthCore } from './core/OAuthCore';\n-export { FlowRegistry } from './core/FlowRegistry';\n-export { PKCEManager } from './core/PKCEManager';\n-export { TokenManager } from './core/TokenManager';\n-export { StateValidator } from './core/StateValidator';\n-\n-// Flow handlers\n-export * from './flows';\n-\n-// Types (avoiding duplicate exports)\n-export type {\n-  OAuthConfig,\n-  OAuthAdapters,\n-  OAuthResult,\n-  StorageAdapter,\n-  HttpAdapter,\n-  PKCEAdapter,\n-  HttpResponse,\n-  PKCEChallenge,\n-  TokenExchangeRequest,\n-  TokenResponse,\n-  OAuthError,\n-  OAuthErrorCode,\n-  FlowConfiguration\n-} from './types/OAuthTypes';\n-\n-export { OAUTH_ERROR_CODES } from './types/OAuthTypes';\n-\n-export type {\n-  OAuthEndpoints,\n-  DetectionStrategy,\n-  OAuthConfigOptions,\n-  StorageConfig,\n-  HttpConfig,\n-  PKCEConfig,\n-  AdapterConfig,\n-  OAuthCoreConfig,\n-  DEFAULT_CONFIG\n-} from './types/ConfigTypes';\n-\n-// Utilities\n-export { ErrorHandler } from './utils/ErrorHandler';\n-export { UrlParser } from './utils/UrlParser';\n-\n-// Convenience factory function\n-export function createOAuthCore(\n-  config: OAuthConfig,\n-  adapters: OAuthAdapters,\n-  flowConfig?: FlowConfiguration\n-) {\n-  return new OAuthCore(config, adapters, flowConfig);\n-}\n"
                },
                {
                    "date": 1752831805126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,7 +51,7 @@\n export function createOAuthCore(\n   config: import('./types/OAuthTypes').OAuthConfig,\n   adapters: import('./types/OAuthTypes').OAuthAdapters,\n   flowConfig?: import('./types/OAuthTypes').FlowConfiguration\n-): OAuthCore {\n+): import('./core/OAuthCore').OAuthCore {\n   return new OAuthCore(config, adapters, flowConfig);\n }\n"
                },
                {
                    "date": 1752832211265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+/**\n+ * @zestic/oauth-core - Framework-agnostic OAuth authentication library\n+ */\n+\n+// Core classes\n+export { OAuthCore } from './core/OAuthCore';\n+export { FlowRegistry } from './core/FlowRegistry';\n+export { PKCEManager } from './core/PKCEManager';\n+export { TokenManager } from './core/TokenManager';\n+export { StateValidator } from './core/StateValidator';\n+\n+// Flow handlers\n+export * from './flows';\n+\n+// Types (avoiding duplicate exports)\n+export type {\n+  OAuthConfig,\n+  OAuthAdapters,\n+  OAuthResult,\n+  StorageAdapter,\n+  HttpAdapter,\n+  PKCEAdapter,\n+  HttpResponse,\n+  PKCEChallenge,\n+  TokenExchangeRequest,\n+  TokenResponse,\n+  OAuthError,\n+  OAuthErrorCode,\n+  FlowConfiguration\n+} from './types/OAuthTypes';\n+\n+export { OAUTH_ERROR_CODES } from './types/OAuthTypes';\n+\n+export type {\n+  OAuthEndpoints,\n+  DetectionStrategy,\n+  OAuthConfigOptions,\n+  StorageConfig,\n+  HttpConfig,\n+  PKCEConfig,\n+  AdapterConfig,\n+  OAuthCoreConfig,\n+  DEFAULT_CONFIG\n+} from './types/ConfigTypes';\n+\n+// Utilities\n+export { ErrorHandler } from './utils/ErrorHandler';\n+export { UrlParser } from './utils/UrlParser';\n+\n+// Convenience factory function\n+export function createOAuthCore(\n+  config: import('./types/OAuthTypes').OAuthConfig,\n+  adapters: import('./types/OAuthTypes').OAuthAdapters,\n+  flowConfig?: import('./types/OAuthTypes').FlowConfiguration\n+): OAuthCore {\n+  return new OAuthCore(config, adapters, flowConfig);\n+}\n"
                },
                {
                    "date": 1752832253190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,7 +51,7 @@\n export function createOAuthCore(\n   config: import('./types/OAuthTypes').OAuthConfig,\n   adapters: import('./types/OAuthTypes').OAuthAdapters,\n   flowConfig?: import('./types/OAuthTypes').FlowConfiguration\n-): OAuthCore {\n+): import('./core/OAuthCore').OAuthCore {\n   return new OAuthCore(config, adapters, flowConfig);\n }\n"
                },
                {
                    "date": 1752832307023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,64 +51,8 @@\n export function createOAuthCore(\n   config: import('./types/OAuthTypes').OAuthConfig,\n   adapters: import('./types/OAuthTypes').OAuthAdapters,\n   flowConfig?: import('./types/OAuthTypes').FlowConfiguration\n-): import('./core/OAuthCore').OAuthCore {\n-  return new OAuthCore(config, adapters, flowConfig);\n+): OAuthCore {\n+  const { OAuthCore: OAuthCoreClass } = require('./core/OAuthCore');\n+  return new OAuthCoreClass(config, adapters, flowConfig);\n }\n-/**\n- * @zestic/oauth-core - Framework-agnostic OAuth authentication library\n- */\n-\n-// Core classes\n-export { OAuthCore } from './core/OAuthCore';\n-export { FlowRegistry } from './core/FlowRegistry';\n-export { PKCEManager } from './core/PKCEManager';\n-export { TokenManager } from './core/TokenManager';\n-export { StateValidator } from './core/StateValidator';\n-\n-// Flow handlers\n-export * from './flows';\n-\n-// Types (avoiding duplicate exports)\n-export type {\n-  OAuthConfig,\n-  OAuthAdapters,\n-  OAuthResult,\n-  StorageAdapter,\n-  HttpAdapter,\n-  PKCEAdapter,\n-  HttpResponse,\n-  PKCEChallenge,\n-  TokenExchangeRequest,\n-  TokenResponse,\n-  OAuthError,\n-  OAuthErrorCode,\n-  FlowConfiguration\n-} from './types/OAuthTypes';\n-\n-export { OAUTH_ERROR_CODES } from './types/OAuthTypes';\n-\n-export type {\n-  OAuthEndpoints,\n-  DetectionStrategy,\n-  OAuthConfigOptions,\n-  StorageConfig,\n-  HttpConfig,\n-  PKCEConfig,\n-  AdapterConfig,\n-  OAuthCoreConfig,\n-  DEFAULT_CONFIG\n-} from './types/ConfigTypes';\n-\n-// Utilities\n-export { ErrorHandler } from './utils/ErrorHandler';\n-export { UrlParser } from './utils/UrlParser';\n-\n-// Convenience factory function\n-export function createOAuthCore(\n-  config: import('./types/OAuthTypes').OAuthConfig,\n-  adapters: import('./types/OAuthTypes').OAuthAdapters,\n-  flowConfig?: import('./types/OAuthTypes').FlowConfiguration\n-): import('./core/OAuthCore').OAuthCore {\n-  return new OAuthCore(config, adapters, flowConfig);\n-}\n"
                },
                {
                    "date": 1752832327961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,13 +46,5 @@\n // Utilities\n export { ErrorHandler } from './utils/ErrorHandler';\n export { UrlParser } from './utils/UrlParser';\n \n-// Convenience factory function\n-export function createOAuthCore(\n-  config: import('./types/OAuthTypes').OAuthConfig,\n-  adapters: import('./types/OAuthTypes').OAuthAdapters,\n-  flowConfig?: import('./types/OAuthTypes').FlowConfiguration\n-): OAuthCore {\n-  const { OAuthCore: OAuthCoreClass } = require('./core/OAuthCore');\n-  return new OAuthCoreClass(config, adapters, flowConfig);\n-}\n+// Note: Use 'new OAuthCore(config, adapters, flowConfig)' to create instances\n"
                }
            ],
            "date": 1752830934296,
            "name": "Commit-0",
            "content": "/**\n * @zestic/oauth-core - Framework-agnostic OAuth authentication library\n */\n\n// Core classes\nexport { OAuthCore } from './core/OAuthCore';\nexport { FlowRegistry } from './core/FlowRegistry';\nexport { PKCEManager } from './core/PKCEManager';\nexport { TokenManager } from './core/TokenManager';\nexport { StateValidator } from './core/StateValidator';\n\n// Flow handlers\nexport * from './flows';\n\n// Types (avoiding duplicate exports)\nexport type {\n  OAuthConfig,\n  OAuthAdapters,\n  OAuthResult,\n  StorageAdapter,\n  HttpAdapter,\n  PKCEAdapter,\n  HttpResponse,\n  PKCEChallenge,\n  TokenExchangeRequest,\n  TokenResponse,\n  OAuthError,\n  OAuthErrorCode,\n  OAUTH_ERROR_CODES\n} from './types/OAuthTypes';\n\nexport type {\n  OAuthEndpoints,\n  DetectionStrategy,\n  OAuthConfigOptions,\n  StorageConfig,\n  HttpConfig,\n  PKCEConfig,\n  AdapterConfig,\n  OAuthCoreConfig,\n  DEFAULT_CONFIG\n} from './types/ConfigTypes';\n\n// Utilities\nexport { ErrorHandler } from './utils/ErrorHandler';\nexport { UrlParser } from './utils/UrlParser';\n\n// Convenience factory function\nexport function createOAuthCore(\n  config: import('./types/OAuthTypes').OAuthConfig,\n  adapters: import('./types/OAuthTypes').OAuthAdapters,\n  flowConfig?: import('./types/OAuthTypes').FlowConfiguration\n) {\n  return new OAuthCore(config, adapters, flowConfig);\n}\n"
        }
    ]
}