/**
 * Structured error system exports
 * Provides comprehensive error handling for OAuth operations
 */

// Base error class and types
export { OAuthError } from './OAuthError';
export type { 
  OAuthErrorType, 
  OAuthErrorMetadata 
} from './OAuthError';

// Specific error classes
export { NetworkError } from './NetworkError';
export type { NetworkErrorMetadata } from './NetworkError';

export { TokenError } from './TokenError';
export type { TokenErrorMetadata } from './TokenError';

export { ConfigError } from './ConfigError';
export type { ConfigErrorMetadata } from './ConfigError';

export { ValidationError } from './ValidationError';
export type { ValidationErrorMetadata } from './ValidationError';

export { FlowError } from './FlowError';
export type { FlowErrorMetadata } from './FlowError';

// Error codes constants
export const OAUTH_ERROR_CODES = {
  // Network errors
  NETWORK_ERROR: 'NETWORK_ERROR',
  NETWORK_CONNECTION_ERROR: 'NETWORK_CONNECTION_ERROR',
  NETWORK_SERVER_ERROR: 'NETWORK_SERVER_ERROR',
  NETWORK_CLIENT_ERROR: 'NETWORK_CLIENT_ERROR',
  NETWORK_RATE_LIMITED: 'NETWORK_RATE_LIMITED',
  NETWORK_TIMEOUT: 'NETWORK_TIMEOUT',

  // Token errors
  TOKEN_ERROR: 'TOKEN_ERROR',
  TOKEN_EXPIRED: 'TOKEN_EXPIRED',
  TOKEN_INVALID: 'TOKEN_INVALID',
  TOKEN_MISSING: 'TOKEN_MISSING',
  TOKEN_REFRESH_FAILED: 'TOKEN_REFRESH_FAILED',
  TOKEN_VALIDATION_FAILED: 'TOKEN_VALIDATION_FAILED',
  TOKEN_INSUFFICIENT_SCOPE: 'TOKEN_INSUFFICIENT_SCOPE',
  TOKEN_INVALID_GRANT: 'TOKEN_INVALID_GRANT',
  TOKEN_INVALID_SCOPE: 'TOKEN_INVALID_SCOPE',
  ACCESS_TOKEN_EXPIRED: 'ACCESS_TOKEN_EXPIRED',
  ACCESS_TOKEN_INVALID: 'ACCESS_TOKEN_INVALID',
  ACCESS_TOKEN_MISSING: 'ACCESS_TOKEN_MISSING',
  REFRESH_TOKEN_EXPIRED: 'REFRESH_TOKEN_EXPIRED',
  REFRESH_TOKEN_INVALID: 'REFRESH_TOKEN_INVALID',
  REFRESH_TOKEN_MISSING: 'REFRESH_TOKEN_MISSING',

  // Configuration errors
  CONFIG_ERROR: 'CONFIG_ERROR',
  CONFIG_MISSING_FIELD: 'CONFIG_MISSING_FIELD',
  CONFIG_REQUIRED_FIELD_MISSING: 'CONFIG_REQUIRED_FIELD_MISSING',
  CONFIG_INVALID_TYPE: 'CONFIG_INVALID_TYPE',
  CONFIG_INVALID_VALUE: 'CONFIG_INVALID_VALUE',
  CONFIG_INVALID_URL: 'CONFIG_INVALID_URL',
  CONFIG_INVALID_SCOPE: 'CONFIG_INVALID_SCOPE',
  CONFIG_VALIDATION_FAILED: 'CONFIG_VALIDATION_FAILED',
  CONFIG_EMPTY_SCOPES: 'CONFIG_EMPTY_SCOPES',
  CONFIG_INCOMPATIBLE: 'CONFIG_INCOMPATIBLE',

  // Validation errors
  VALIDATION_ERROR: 'VALIDATION_ERROR',
  VALIDATION_MISSING_PARAMETER: 'VALIDATION_MISSING_PARAMETER',
  VALIDATION_REQUIRED_PARAMETER_MISSING: 'VALIDATION_REQUIRED_PARAMETER_MISSING',
  VALIDATION_INVALID_PARAMETER: 'VALIDATION_INVALID_PARAMETER',
  VALIDATION_INVALID_FORMAT: 'VALIDATION_INVALID_FORMAT',
  VALIDATION_INVALID_VALUE: 'VALIDATION_INVALID_VALUE',
  VALIDATION_INVALID_TYPE: 'VALIDATION_INVALID_TYPE',
  VALIDATION_INVALID_STATE: 'VALIDATION_INVALID_STATE',
  VALIDATION_STATE_MISMATCH: 'VALIDATION_STATE_MISMATCH',
  VALIDATION_MISSING_STATE: 'VALIDATION_MISSING_STATE',
  VALIDATION_INVALID_URL: 'VALIDATION_INVALID_URL',
  VALIDATION_PARAMETER_TOO_LONG: 'VALIDATION_PARAMETER_TOO_LONG',
  VALIDATION_PARAMETER_TOO_SHORT: 'VALIDATION_PARAMETER_TOO_SHORT',
  VALIDATION_PATTERN_MISMATCH: 'VALIDATION_PATTERN_MISMATCH',

  // Flow errors
  FLOW_ERROR: 'FLOW_ERROR',
  FLOW_DETECTION_FAILED: 'FLOW_DETECTION_FAILED',
  FLOW_NO_HANDLER_FOUND: 'FLOW_NO_HANDLER_FOUND',
  FLOW_UNKNOWN: 'FLOW_UNKNOWN',
  FLOW_VALIDATION_FAILED: 'FLOW_VALIDATION_FAILED',
  FLOW_MISSING_PARAMETERS: 'FLOW_MISSING_PARAMETERS',
  FLOW_INVALID_PARAMETERS: 'FLOW_INVALID_PARAMETERS',
  FLOW_EXECUTION_FAILED: 'FLOW_EXECUTION_FAILED',
  FLOW_TIMEOUT: 'FLOW_TIMEOUT',
  FLOW_INTERRUPTED: 'FLOW_INTERRUPTED',
  FLOW_AMBIGUOUS_DETECTION: 'FLOW_AMBIGUOUS_DETECTION',
  FLOW_DISABLED: 'FLOW_DISABLED',
  FLOW_NOT_SUPPORTED: 'FLOW_NOT_SUPPORTED',
  FLOW_INVALID_STATE: 'FLOW_INVALID_STATE',


} as const;

export type OAuthErrorCode = typeof OAUTH_ERROR_CODES[keyof typeof OAUTH_ERROR_CODES];

// Error factory - import separately to avoid circular dependencies
export { ErrorFactory } from './ErrorFactory';
